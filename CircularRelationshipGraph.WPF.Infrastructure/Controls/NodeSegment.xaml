<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                        xmlns:local="clr-namespace:CircularRelationshipGraph"
    xmlns:prim="clr-namespace:CircularRelationshipGraph">

    <prim:DoubleToVisibilityConverter x:Key="DoubleToVisibility" />
    <prim:NegateDoubleConverter x:Key="NegateDouble" />

    <Style TargetType="{x:Type local:NodeSegment}">
        <Setter Property="Canvas.ZIndex" Value="100" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:NodeSegment}">
                    <Canvas x:Name="rootElement"
                  DataContext="{Binding RelativeSource={RelativeSource TemplatedParent}}">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal">
                                    <Storyboard>
                                        <ColorAnimation Storyboard.TargetName="segmentShape"
                                    Storyboard.TargetProperty="(Path.Fill).(SolidColorBrush.Color)"
                                    Duration="0:0:0.2" />
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Highlighted">
                                    <Storyboard>
                                        <ColorAnimation Storyboard.TargetName="segmentShape"
                                    Storyboard.TargetProperty="(Path.Fill).(SolidColorBrush.Color)"
                                    To="LightGray" Duration="0:0:0.2" />
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="label"
                                    Storyboard.TargetProperty="(UIElement.Visibility)">
                                            <DiscreteObjectKeyFrame KeyTime="00:00:00">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>

                        <!-- the segment itself -->
                        <Path Stroke="{TemplateBinding Stroke}"
                  StrokeThickness="{TemplateBinding StrokeThickness}"
                  Fill="{TemplateBinding Background}"
                  DataContext="{Binding ViewModel}"
                  x:Name="segmentShape">
                            <Path.Data>
                                <PathGeometry>
                                    <PathFigure StartPoint="{Binding Path=S1}"
                              IsClosed="True">
                                        <ArcSegment Point="{Binding Path=S2}"
                                SweepDirection="Counterclockwise"
                                IsLargeArc="{Binding Path=IsLargeArc}"
                                Size="{Binding Path=OuterSize}" />
                                        <LineSegment Point="{Binding Path=S3}" />
                                        <ArcSegment Point="{Binding Path=S4}"
                                SweepDirection="Clockwise"
                                IsLargeArc="{Binding Path=IsLargeArc}"
                                Size="{Binding Path=InnerSize}" />
                                    </PathFigure>
                                </PathGeometry>
                            </Path.Data>
                        </Path>

                        <!-- the text label for this segment -->
                        <TextBlock Text="{Binding Path=LabelText}"
                        Visibility="{Binding Path=SweepAngle, Converter={StaticResource DoubleToVisibility}, ConverterParameter=3}"
                        Canvas.Top="{Binding Path=ViewModel.LabelLocation.Y}"
                        Canvas.Left="{Binding Path=ViewModel.LabelLocation.X}"
                        x:Name="label"
                        Height="20"
                        VerticalAlignment="Center"
                        HorizontalAlignment="Center">
                            <TextBlock.RenderTransform>
                                <TransformGroup>
                                    <TranslateTransform X="0" Y="-10" />
                                    <RotateTransform Angle="{Binding Path=MidPointAngle, Converter={StaticResource NegateDouble}}" />
                                    <RotateTransform Angle="90" />
                                </TransformGroup>
                            </TextBlock.RenderTransform>
                        </TextBlock>
                    </Canvas>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>